export interface UispClient {
  id: number;
  userIdent: string;
  previousIsp: string;
  isLead: boolean;
  clientType: number;
  companyName: string;
  companyRegistrationNumber: string;
  companyTaxId: string;
  companyWebsite: string;
  companyContactFirstName: string;
  companyContactLastName: string;
  firstName: string;
  lastName: string;
  street1: string;
  street2: string;
  city: string;
  countryId: number;
  stateId: number;
  zipCode: string;
  fullAddress: string;
  invoiceStreet1: string;
  invoiceStreet2: string;
  invoiceCity: string;
  invoiceStateId: number;
  invoiceCountryId: number;
  invoiceZipCode: string;
  invoiceAddressSameAsContact: boolean;
  note: string;
  sendInvoiceByPost: boolean;
  invoiceMaturityDays: number;
  stopServiceDue: boolean;
  stopServiceDueDays: number;
  organizationId: number;
  tax1Id: number;
  tax2Id: number;
  tax3Id: number;
  registrationDate: string;
  username: string;
  avatarColor: string;
  addressGpsLat: number;
  addressGpsLon: number;
  generateProformaInvoices: boolean;
  referral: string;
  isActive: boolean;
  contacts: Array<{
    id: number;
    clientId: number;
    email: string;
    phone: string;
    name: string;
    isBilling: boolean;
    isContact: boolean;
    types: Array<{
      id: number;
      name: string;
    }>;
  }>;
  attributes: Array<{
    id: number;
    clientId: number;
    name: string;
    key: string;
    clientZoneVisible: boolean;
    value: string;
    customAttributeId: number;
  }>;
  accountBalance: number;
  accountCredit: number;
  accountOutstanding: number;
  currencyCode: string;
  organizationName: string;
  bankAccounts: Array<{
    id: number;
    accountNumber: string;
  }>;
  tags: Array<{
    id: number;
    name: string;
    colorBackground: string;
    colorText: string;
  }>;
  invitationEmailSentDate: string;
  isArchived: boolean;
  usesProforma: boolean;
  hasOverdueInvoice: boolean;
  hasOutage: boolean;
  hasSuspendedService: boolean;
  hasServiceWithoutDevices: boolean;
  leadConvertedAt: string;
  hasPaymentSubscription: boolean;
  hasAutopayCreditCard: boolean;
} 